{"ast":null,"code":"import _regeneratorRuntime from \"/home/bigdeal/myproject/ui-10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bigdeal/myproject/ui-10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/bigdeal/myproject/ui-10/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bigdeal/myproject/ui-10/src/container/vocab/VocabList.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { VocabPage } from '../../template/pages';\nimport { Vocab } from '../../components';\nimport vocabs from \"./vocab.js\";\nimport { Badge, Button, Card, CardBody, CardImg, FormGroup, Input, InputGroupAddon, InputGroupText, InputGroup, Container, Row, Col } from 'reactstrap';\n\nvar VocabList = () => {\n  // const [vocabId, setVocabId] = useState(1)\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      vocabs = _useState2[0],\n      setVocabs = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(() => {\n    var fetchVocabs = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                // 요청이 시작 할 때에는 error 와 tests 를 초기화하고\n                setError(null);\n                setVocabs(null); // loading 상태를 true 로 바꿉니다.\n\n                setLoading(true);\n                _context.next = 6;\n                return axios.get('http://127.0.0.1:8080/api/vocabs');\n\n              case 6:\n                response = _context.sent;\n                setVocabs(response.data);\n                console.log(response.data); // 데이터는 response.data 안에 들어있습니다.\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                setError(_context.t0);\n\n              case 14:\n                setLoading(false);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      return function fetchVocabs() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchVocabs();\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"\\uB85C\\uB529\\uC911..\");\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\");\n  if (!vocabs) return null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VocabPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 1\n    }\n  }, vocabs.map((vocab, index) => /*#__PURE__*/React.createElement(Row, {\n    className: \"show-grid\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"vocab mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, vocab.vocabId)), /*#__PURE__*/React.createElement(Col, {\n    lg: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"meaning mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, vocab.vocab)))))));\n};\n\nexport default VocabList;","map":{"version":3,"sources":["/home/bigdeal/myproject/ui-10/src/container/vocab/VocabList.jsx"],"names":["React","useState","useEffect","axios","VocabPage","Vocab","vocabs","Badge","Button","Card","CardBody","CardImg","FormGroup","Input","InputGroupAddon","InputGroupText","InputGroup","Container","Row","Col","VocabList","setVocabs","loading","setLoading","error","setError","fetchVocabs","get","response","data","console","log","map","vocab","index","vocabId"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SACIC,KADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,QAJJ,EAKIC,OALJ,EAMIC,SANJ,EAOIC,KAPJ,EAQIC,eARJ,EASIC,cATJ,EAUIC,UAVJ,EAWIC,SAXJ,EAYIC,GAZJ,EAaIC,GAbJ,QAcS,YAdT;;AAeA,IAAMC,SAAS,GAAG,MAAM;AACtB;AADsB,kBAEMnB,QAAQ,CAAC,IAAD,CAFd;AAAA;AAAA,MAEfK,MAFe;AAAA,MAEPe,SAFO;;AAAA,mBAGQpB,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,MAGfqB,OAHe;AAAA,MAGNC,UAHM;;AAAA,mBAIItB,QAAQ,CAAC,IAAD,CAJZ;AAAA;AAAA,MAIfuB,KAJe;AAAA,MAIRC,QAJQ;;AAMtBvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAMwB,WAAW;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB;AACAD,gBAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,gBAAAA,SAAS,CAAC,IAAD,CAAT,CAJgB,CAKhB;;AACAE,gBAAAA,UAAU,CAAC,IAAD,CAAV;AANgB;AAAA,uBAOOpB,KAAK,CAACwB,GAAN,CACrB,kCADqB,CAPP;;AAAA;AAOVC,gBAAAA,QAPU;AAUhBP,gBAAAA,SAAS,CAACO,QAAQ,CAACC,IAAV,CAAT;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB,EAXgB,CAWW;;AAXX;AAAA;;AAAA;AAAA;AAAA;AAahBJ,gBAAAA,QAAQ,aAAR;;AAbgB;AAelBF,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AAfkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAXG,WAAW;AAAA;AAAA;AAAA,OAAjB;;AAkBAA,IAAAA,WAAW;AACZ,GApBQ,EAoBN,EApBM,CAAT;AAqBA,MAAIJ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACb,MAAIE,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAAP;AACX,MAAI,CAAClB,MAAL,EAAa,OAAO,IAAP;AAEf,sBAAM,uDACN,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,MAAM,CAAC0B,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBACZ,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,OADT,CADJ,CADA,eAME,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACA,KADT,CADF,CANF,CADC,CADD,CADA,CADM,CAAN;AAqBC,CApDD;;AAsDA,eAAeb,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport {VocabPage} from '../../template/pages'\nimport {Vocab} from '../../components' \nimport vocabs from \"./vocab.js\"\nimport {\n    Badge,\n    Button,\n    Card,\n    CardBody,\n    CardImg,\n    FormGroup,\n    Input,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Container,\n    Row,\n    Col,\n  } from 'reactstrap';\nconst VocabList = () => {\n  // const [vocabId, setVocabId] = useState(1)\n  const [vocabs, setVocabs] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchVocabs = async () => {\n      try {\n        // 요청이 시작 할 때에는 error 와 tests 를 초기화하고\n        setError(null);\n        setVocabs(null);\n        // loading 상태를 true 로 바꿉니다.\n        setLoading(true);\n        const response = await axios.get(\n          'http://127.0.0.1:8080/api/vocabs'\n        );\n        setVocabs(response.data);\n        console.log(response.data) // 데이터는 response.data 안에 들어있습니다.\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    };\n\n    fetchVocabs();\n  }, []);\n  if (loading) return <div>로딩중..</div>;\n  if (error) return <div>에러가 발생했습니다</div>;\n  if (!vocabs) return null;\n\nreturn<>\n<VocabPage>\n<Container>\n{vocabs.map((vocab, index) =>(\n<Row className=\"show-grid\" key={index}>\n<Col lg=\"2\">\n    <p className=\"vocab mt-3\">\n      {vocab.vocabId}\n    </p>\n  </Col>\n  <Col lg=\"10\">\n    <p className=\"meaning mt-3\">\n      {vocab.vocab}\n    </p>\n  </Col>\n</Row>\n))}\n</Container>\n</VocabPage>\n\n</>\n}\n\nexport default VocabList;"]},"metadata":{},"sourceType":"module"}