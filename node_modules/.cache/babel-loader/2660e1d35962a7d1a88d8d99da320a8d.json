{"ast":null,"code":"import _slicedToArray from \"/home/bigdeal/myproject/ui-7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/bigdeal/myproject/ui-7/src/components/ReviewInput.jsx\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport uuid from 'uuid/v4';\nimport { addPostAction } from '../store/reviewReducer';\nimport axios from 'axios';\nimport { Badge, Button, Card, CardBody, CardImg, FormGroup, Input, Form, Table, InputGroupAddon, InputGroupText, InputGroup, Container, Row, Col } from 'reactstrap';\n\nvar ReviewInput = () => {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      review = _useState6[0],\n      setReview = _useState6[1];\n\n  var dispatch = useDispatch();\n\n  var submitPost = e => {\n    e.preventDefault();\n    var newReview = {\n      count,\n      name,\n      review\n    };\n    axios.post('http://localhost:3000/app-review-page', newReview) //여기서 post대신 get도 가능\n    .then(console.log('review post success')).error(console.log('reviewpost fail'));\n    addReview(newReview);\n    setName('');\n    setCount(count + 1);\n    setReview('');\n  };\n\n  var handleChange = e => {\n    e.preventDefault();\n    setName(e.target.value); //target 은 말 치는 박스,  value 는 그 안에 value\n\n    setReview(e.target.value); //target 은 말 치는 박스,  value 는 그 안에 value\n  };\n\n  var addReview = review => {\n    dispatch(addPostAction(review));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, \"\\uC571 \\uB9AC\\uBDF0\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"id=\\\"exampleFormControlInput1\\\" placeholder=\\\"\\uC5EC\\uAE30\\uB2E4 \\uC774\\uB984 \\uC785\\uB825\\uD558\\uC2DC\\uC624\\\" type=\\\"text\\\" name = 'name' onChange = \", e => setName(e.target.value))))), /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"id=\\\"exampleFormControlTextarea1\\\" placeholder=\\\"\\uC774 \\uC571\\uC774 \\uC5B4\\uB5A0\\uC2E0\\uAC00\\uC694? \\uC18C\\uC911\\uD55C \\uC758\\uACAC\\uC744 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694 :)\\\" rows=\\\"6\\\" type=\\\"text\\\" name = 'review' onChange = \", e => setReview(e.target.value)), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: '1rem 0 3rem '\n    },\n    color: \"success\",\n    size: \"md\",\n    onClick: submitPost,\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"\\uB9AC\\uBDF0 \\uB0A8\\uAE30\\uAE30\")))));\n};\n\nexport default ReviewInput;","map":{"version":3,"sources":["/home/bigdeal/myproject/ui-7/src/components/ReviewInput.jsx"],"names":["React","useState","useDispatch","uuid","addPostAction","axios","Badge","Button","Card","CardBody","CardImg","FormGroup","Input","Form","Table","InputGroupAddon","InputGroupText","InputGroup","Container","Row","Col","ReviewInput","count","setCount","name","setName","review","setReview","dispatch","submitPost","e","preventDefault","newReview","post","then","console","log","error","addReview","handleChange","target","value","margin"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {useDispatch} from 'react-redux'\nimport uuid from 'uuid/v4'\nimport {addPostAction} from '../store/reviewReducer'\nimport axios from 'axios'\n\nimport {\n    Badge,\n    Button,\n    Card,\n    CardBody,\n    CardImg,\n    FormGroup,\n    Input,\n    Form,\n    Table,\n    InputGroupAddon,\n    InputGroupText,\n    InputGroup,\n    Container,\n    Row,\n    Col,\n  } from 'reactstrap';\n\nconst ReviewInput = () => {\n    const [count, setCount] = useState(1)\n    const [name, setName] = useState('')\n    const [review, setReview] = useState('') \n    const dispatch = useDispatch()  \n    \n    const submitPost = e => {\n      e.preventDefault()\n      const newReview = {\n        count, name, review\n      }\n      axios.post('http://localhost:3000/app-review-page', newReview) //여기서 post대신 get도 가능\n        .then(\n            console.log('review post success')\n        )\n        .error(\n            console.log('reviewpost fail')\n        )\n\n        \n      addReview(newReview)\n      setName('')\n      setCount(count+1)\n      setReview('') \n    }\n    \n    const handleChange = e => {\n      e.preventDefault()\n      setName(e.target.value)  //target 은 말 치는 박스,  value 는 그 안에 value\n      setReview(e.target.value)  //target 은 말 치는 박스,  value 는 그 안에 value\n    }\n    const addReview = (review) => {\n      dispatch(addPostAction(review))\n    }\n    \n\n\n    return <> \n    <h1>앱 리뷰</h1>\n    <form>\n        <div>\n            <Form>\n              <Row>\n                <Col md=\"6\">\n                  <FormGroup>\n                    <Input>\n                      id=\"exampleFormControlInput1\"\n                      placeholder=\"여기다 이름 입력하시오\"\n                      type=\"text\"\n                      name = 'name'\n                      onChange = {e => setName(e.target.value)}\n                    </Input>\n                  </FormGroup>\n                </Col>\n              </Row>\n                    <Input>\n                      id=\"exampleFormControlTextarea1\"\n                      placeholder=\"이 앱이 어떠신가요? 소중한 의견을 남겨주세요 :)\"\n                      rows=\"6\"\n                      type=\"text\"\n                      name = 'review'\n                      onChange = {e => setReview(e.target.value)}\n                    </Input>\n                    <Button  style={{ margin: '1rem 0 3rem ' }} color=\"success\" size = \"md\" onClick = {submitPost} method='POST'>\n                      리뷰 남기기\n                    </Button>\n            \n            </Form>\n        </div>\n    </form>\n  </>    \n}\n\n\nexport default ReviewInput \n"]},"metadata":{},"sourceType":"module"}